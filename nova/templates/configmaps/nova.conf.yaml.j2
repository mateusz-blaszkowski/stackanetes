apiVersion: v1
kind: ConfigMap
data:
  nova.conf: |+
    [DEFAULT]
    debug = {{ misc.debug }}
    default_ephemeral_format = ext4
    host_subset_size = 30
    ram_allocation_ratio=1.0
    disk_allocation_ratio=1.0
    cpu_allocation_ratio=3.0

    state_path = /var/lib/nova

    osapi_compute_listen = {{ network.ip_address }}
    osapi_compute_listen_port = {{ network.port.api }}
    osapi_compute_workers = {{ misc.workers }}

    workers = {{ misc.workers }}
    metadata_workers = {{ misc.workers }}

    use_neutron = True
    firewall_driver = nova.virt.firewall.IptablesFirewallDriver
    linuxnet_interface_driver = openvswitch

    allow_resize_to_same_host = True

    compute_driver = libvirt.LibvirtDriver

    # Though my_ip is not used directly, lots of other variables use $my_ip
    my_ip = {{ network.ip_address }}

    transport_url = rabbit://{{ rabbitmq.admin_user }}:{{ rabbitmq.admin_password }}@{{ rabbitmq.address }}:{{ rabbitmq.port }}

    [vnc]
    novncproxy_host = {{ network.ip_address }}
    novncproxy_port = {{ network.port.novncproxy }}
    vncserver_listen = 0.0.0.0
    vncserver_proxyclient_address = {{ network.ip_address }}

    {% if network.ingress.enabled %}
    novncproxy_base_url = http://{{ network.ingress.named_host.novncproxy }}:{{ network.ingress.port }}/vnc_auto.html
    {% elif network.external_ips|length > 0 %}
    novncproxy_base_url = http://{{ network.external_ips[0] }}:{{ network.port.novncproxy }}/vnc_auto.html
    {% else %}
    novncproxy_base_url = http://{{ network.ip_address }}:{{ network.port.novncproxy }}/vnc_auto.html
    {% endif %}


    [oslo_concurrency]
    lock_path = /var/lib/nova/tmp

    [conductor]
    workers = {{ misc.workers }}

    [glance]
    api_servers = {{ glance.api_url }}
    num_retries = 3

    [cinder]
    catalog_info = volume:cinder:internalURL

    [neutron]
    url = {{ neutron.api_url }}

    metadata_proxy_shared_secret = {{ neutron.metadata_secret }}
    service_metadata_proxy = True

    auth_url = {{ keystone.auth_url }}
    auth_type = password
    project_domain_name = default
    user_domain_id = default
    project_name = service
    username = {{ keystone.neutron_user }}
    password = {{ keystone.neutron_password }}

    [database]
    connection = mysql+pymysql://{{ database.nova_user }}:{{ database.nova_password }}@{{ database.address }}/{{ database.nova_database_name }}
    max_pool_size = {{ misc.workers }}
    max_overflow  = {{ misc.workers }}
    max_retries = -1

    [api_database]
    connection = mysql+pymysql://{{ database.nova_user }}:{{ database.nova_password }}@{{ database.address }}/{{ database.nova_api_database_name }}
    max_pool_size = {{ misc.workers }}
    max_overflow  = {{ misc.workers }}
    max_retries = -1

    [keystone_authtoken]
    auth_uri = {{ keystone.auth_uri }}
    auth_url = {{ keystone.auth_url }}
    auth_plugin = password
    project_domain_id = default
    user_domain_id = default
    project_name = service
    username = {{ keystone.nova_user }}
    password = {{ keystone.nova_password }}

    [libvirt]
    connection_uri = "qemu+tcp://{{ network.ip_address }}/system"
    images_type = qcow2
    # Enabling live-migration without hostname resolution
    live_migration_inbound_addr = {{ network.ip_address }}

    {% if ceph.enabled %}
    images_rbd_pool = {{ ceph.nova_pool }}
    images_rbd_ceph_conf = /etc/ceph/ceph.conf
    rbd_user = {{ ceph.cinder_user }}
    rbd_secret_uuid = {{ ceph.secret_uuid }}
    disk_cachemodes="network=writeback"
    hw_disk_discard = unmap
    {% endif %}

    [upgrade_levels]
    compute = auto

    [cache]
    enabled = True
    backend = oslo_cache.memcache_pool
    memcache_servers = {{ memcached.address }}

    [wsgi]
    api_paste_config = /etc/nova/api-paste.ini

