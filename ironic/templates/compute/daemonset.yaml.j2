apiVersion: extensions/v1beta1
kind: DaemonSet
spec:
  template:
    metadata:
      labels:
        app: compute-node
    spec:
      nodeSelector:
        # TODO:
        # {{ deployment.compute_node_label }}: enabled
        mateuszb: enabled
      securityContext:
        runAsUser: 0
      hostNetwork: true
      hostPID: true
      dnsPolicy: ClusterFirst
      containers:
        - name: nova-compute-ironic
          image: {{ deployment.image.compute }}
          imagePullPolicy: Always
          securityContext:
            privileged: true
          env:
            - name: INTERFACE_NAME
              value: {{ network.minion_interface_name }}
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: COMMAND
              value: "bash /tmp/nova-compute-ironic.sh"
            - name: DEPENDENCY_JOBS
              value: "ironic-init,ironic-post"
            - name: DEPENDENCY_SERVICE
              value: "keystone-api,glance-api,nova-api"
            - name: DEPENDENCY_CONFIG
              value: "/etc/nova/nova.conf,/tmp/nova-compute-ironic.sh,/etc/resolv.conf"
          volumeMounts:
            - name: novaconf
              mountPath: /configmaps/nova.conf
            - name: novacomputeironicsh
              mountPath: /configmaps/nova-compute-ironic.sh
            - name: resolvconf
              mountPath: /configmaps/resolv.conf
            - mountPath: /var/lib/nova
              name: varlibnovaironic
      volumes:
        - name: novaconf
          configMap:
            name: ironic-novaconf
        - name: novacomputeironicsh
          configMap:
            name: nova-compute-ironicsh
        - name: resolvconf
          configMap:
            name: ironic-resolvconf
        - name: varlibnovaironic
          hostPath:
            path: /var/lib/nova/ironic