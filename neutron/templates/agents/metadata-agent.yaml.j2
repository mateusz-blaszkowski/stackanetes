apiVersion: extensions/v1beta1
kind: DaemonSet
spec:
  template:
    metadata:
      labels:
        app: neutron-metadata-agent
    spec:
      nodeSelector:
        {{ deployment.control_node_label }}: enabled
      securityContext:
        runAsUser: 0
      dnsPolicy: ClusterFirst
      hostNetwork: true
      containers:
        - name: neutron-metadata-agent
          image: {{ deployment.image.metadata }}
          imagePullPolicy: Always
          securityContext:
            privileged: true
          env:
            - name: INTERFACE_NAME
              value: {{ network.minion_interface_name }}
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: COMMAND
              value: "neutron-metadata-agent --config-file /etc/neutron/neutron.conf --config-file /etc/neutron/metadata-agent.ini"
            - name: DEPENDENCY_JOBS
              value: "neutron-init,nova-post"
            - name: DEPENDENCY_SERVICE
              value: "neutron-server,rabbitmq,nova-api"
            - name: DEPENDENCY_CONFIG
              value: "/etc/neutron/neutron.conf,/etc/neutron/plugins/ml2/ml2-conf.ini,/etc/neutron/metadata-agent.ini,/etc/resolv.conf"
          volumeMounts:
            - name: neutronconf
              mountPath: /configmaps/neutron.conf
            - name: ml2confini
              mountPath: /configmaps/ml2-conf.ini
            - name: metadataagentini
              mountPath: /configmaps/metadata-agent.ini
            - name: resolvconf
              mountPath: /configmaps/resolv.conf
              readOnly: true
            - name: runopenvswitch
              mountPath: /run/openvswitch
            - name: socket
              mountPath: /var/lib/neutron/stackanetes
            {% if deployment.engine == "rkt" -%}
            - name: procsys
              mountPath: /proc/sys
            {%- endif %}
      volumes:
        - name: neutronconf
          configMap:
            name: neutron-neutronconf
        - name: ml2confini
          configMap:
            name: neutron-ml2confini
        - name: metadataagentini
          configMap:
            name: neutron-metadataagentini
        - name: resolvconf
          configMap:
            name: neutron-resolvconf
        - name: runopenvswitch
          hostPath:
            path: /run/openvswitch
        - name: socket
          hostPath:
            path: /var/lib/neutron/stackanetes
        # TODO(Quentin-M): Remove me
        # https://github.com/coreos/rkt/issues/3245
        # https://github.com/coreos/rkt/issues/2694
        {% if deployment.engine == "rkt" -%}
        - name: procsys
          hostPath:
            path: /proc/sys
        {%- endif %}
